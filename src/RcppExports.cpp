// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// localLoss
SEXP localLoss(const NumericMatrix& L, const NumericMatrix& R, const NumericVector& is, const NumericVector& js, const NumericMatrix& error_matrix);
RcppExport SEXP _BEclear_localLoss(SEXP LSEXP, SEXP RSEXP, SEXP isSEXP, SEXP jsSEXP, SEXP error_matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type is(isSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type js(jsSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type error_matrix(error_matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(localLoss(L, R, is, js, error_matrix));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BEclear_localLoss", (DL_FUNC) &_BEclear_localLoss, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_BEclear(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
